{"type":"doc","content":[{"type":"heading","attrs":{"level":1,"class":"pm-align--center"},"content":[{"type":"text","text":"Clean Code"}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Does Clean Code Matter?"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Rush in trying to release a software is always a bad thing."}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"The Productivity Trap"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"At the beginning of any project if you’re going quickly adding new features and stuff, that’s a red flag. The code base is fragile and later in development is going to get harder and harder to change it and update it."}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Adding new people to the staff is not a solution because you have to teach those new people. The old code is teaching that new people too, there’s no escape of the hole."}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"The Big Redesign in the Sky"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Start over! This is a great opportunity to have things working correctly, however if you are on a big organization it’s probably that another team will start over and your team would be maintaining the old code base."}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--left"},"content":[{"type":"text","text":"Code Rot"}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Rigidity"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"A system that resists change. Changes on one module breaks another module and so on, forever. (It was more complicated that I thought)."}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Fragility"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"A system that malfunctions in many unpredictable ways when a single simple change is made."}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Inseparability"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"A system in which those parts that may be profitable used in another system can’t be separated out from the first system. It’s parts are not independent. Changes can’t be reliable estimated."}]},{"type":"heading","attrs":{"level":4,"class":"pm-align--left"},"content":[{"type":"text","text":"Opacity"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"A system that can’t be changed at all. Hard to read, hard to change, hard to understand. WTFs/minute."}]},{"type":"heading","attrs":{"level":3,"class":"pm-align--left"},"content":[{"type":"text","text":"So, why does code rot?"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Because of you, yeah YOU!"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"If you rush the code, you’re always going slow."}]},{"type":"heading","attrs":{"level":2,"class":"pm-align--center"},"content":[{"type":"text","text":"What is Clean Code?"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Does one thing. It looks like it was written by someone who cares."}]},{"type":"heading","attrs":{"level":3,"class":"pm-align--left"},"content":[{"type":"text","text":"The Boys Scout Rule"}]},{"type":"paragraph","attrs":{"class":"pm-align--left"},"content":[{"type":"text","text":"Leave the code better than you found it."}]}]}